import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Scanner;



public class Cliente {

	public static void main(String[] args) throws ClassNotFoundException {

		System.out.println("*********Cliente De Prueba*********");
		while(true){
			System.out.println(">Seleccione una prueba:");
			System.out.println("\t1.  El usuario se registra en el sistema");
			System.out.println("\t2.  El usuario inicia sesion en el sistema");
			System.out.println("\t3.  Consultar los espectaculos disponibles por parte del usuario");
			System.out.println("\t4.  Consultar los espectaculos en los que se permite la entrada a bebes por parte del usuario");
			System.out.println("\t5.  Consultar la lista participanes de un espectaculo por parte del usuario");
			System.out.println("\t6.  Consultar los eventos de un espectaculo por parte del usuario");
			System.out.println("\t7.  Consultar toda la lista de espectaculos por parte del usuario");
			System.out.println("\t8.  Consultar las gradas de un evento por parte del usuario");
			System.out.println("\t9.  Consultar los precios de una grada por parte del usuario");
			System.out.println("\t10. Consultar los eventos de un espectaculo por parte del usuario");
			System.out.println("\t11. El usuario prereserva una localidad");
			System.out.println("\t12. El usuario anula una localidad");
			System.out.println("\t13. El usuario consulta sus compras");
			System.out.println("\t14. El usuario consulta una tabla vacia");
			System.out.println("\t15. El usuario realiza una consulta cuyo resultado da un elemento vacio");
			System.out.println("\t16. El tiempo de pre-reserva expira");
			System.out.println("\t17. Se anula una reserva pasado el tiempo de penalizacion");
			System.out.println("\t18. Acaba un evento");
			System.out.println("\t19. Salir");
			Scanner sc = new Scanner(System.in);
			int opt = Integer.parseInt(sc.nextLine());
			
			switch(opt){
			case 1:
				prueba1();
				break;
				
			case 2:
				prueba2();
				break;
				
			case 3:	
				prueba3();
				break;
				
			case 4:
				prueba4();
				break;
				
			case 5:	
				prueba5();
				break;
				
			case 6:	
				prueba6();
				break;
				
			case 7:	
				prueba7();
				break;
				
			case 8:	
				prueba8();
				break;
				
			case 9:	
				prueba9();
				break;
				
			case 10:	
				prueba10();
				break;
				
			case 11:	
				prueba11();
				break;
				
			case 12:	
				prueba12();
				break;
				
			case 13:	
				prueba13();
				break;
				
			case 14:	
				prueba14();
				break;
				
			case 15:	
				prueba15();
				break;
				
			case 16:	
				prueba16();
				break;
				
			case 17:	
				prueba17();
				break;
				
			case 18:	
				prueba18();
				break;
				
			case 19:
				System.out.println("*********SALIENDO*********");
				sc.close();
				System.exit(0);
				
			default:	
				System.out.println("Introduzca una opción valida");
				break;
				
			}
			
			System.out.println();
		}
		
	}

//________________________PRUEBAS__________________________________________
	public static void prueba1() throws ClassNotFoundException {
		
			Connection conexion = null;
			 
			String url ="jdbc:mysql://localhost/mydb"; 
			try { 
			
				Class.forName("com.mysql.jdbc.Driver");
				conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
				Scanner sc = new Scanner(System.in);
				
				System.out.println(">Introduzca el nombre");
				String nombre=sc.nextLine();
				System.out.println(">Introduzca la direccion");
				String direccion=sc.nextLine();
				System.out.println(">Introduzca la contraseña");
				String contrasena=sc.nextLine();
				System.out.println(">Introduzca el metodo de pago");
				String pago=sc.nextLine();
				
				CallableStatement cst = conexion.prepareCall("{signup (?,?,?,?)}");
				cst.setString(1,nombre);
				cst.setString(2,direccion);
				cst.setString(3,contrasena);
				cst.setString(4,pago);
				cst.execute();
				
				Statement s = conexion.createStatement();
     		    ResultSet result = s.executeQuery("SELECT * FROM Cliente;");
     		    writeResultSet(result);
     		    
     		    sc.close();

			} catch (SQLException e) {
			  System.err.print("Error: No existe o no se pudo gestionar la BD");
			  e.printStackTrace(); 
			} finally { 
				try { 
					conexion.close(); 
				} catch (SQLException e) {
					System.err.print("Error: No se pudo cerrar la conexion"); 
				} catch (Exception e) { 
					e.printStackTrace(); 
				}	
			} 
	}

	public static void prueba2() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Scanner sc = new Scanner(System.in);
			
			System.out.println(">Introduzca el ID");
			int id=Integer.parseInt(sc.nextLine());
			System.out.println(">Introduzca la contraseña");
			String contrasena=sc.nextLine();
			
			CallableStatement cst = conexion.prepareCall("{login (?,?)}");
			cst.setInt(1,id);
			cst.setString(2,contrasena);
			ResultSet result = cst.executeQuery();
			writeResultSet(result);
			
			sc.close();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba3() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			CallableStatement cst = conexion.prepareCall("{login (?,?)}");
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba4() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba5() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba6() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba7() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba8() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba9() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba10() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba11() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba12() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba13() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba14() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba15() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba16() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba17() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}

	public static void prueba18() throws ClassNotFoundException{
		Connection conexion = null;
		 
		String url ="jdbc:mysql://localhost/mydb"; 
		try { 
		
			Class.forName("com.mysql.jdbc.Driver");
			conexion = DriverManager.getConnection(url, "Sergio", "cambiala");
			Statement s = conexion.createStatement();
		
		} catch (SQLException e) {
		  System.err.print("Error: No existe o no se pudo gestionar la BD");
		  e.printStackTrace(); 
		} finally { 
			try { 
				conexion.close(); 
			} catch (SQLException e) {
				System.err.print("Error: No se pudo cerrar la conexion"); 
			} catch (Exception e) { 
				e.printStackTrace(); 
			}	
		} 
	}
	
//________________________FUNCIONES_AUXILIARES__________________________________________
	public static void writeResultSet(ResultSet resultSet) throws SQLException {
		int ancho = 25;
		ResultSetMetaData RSMD = (ResultSetMetaData) resultSet.getMetaData();
		int ColumnCount = RSMD.getColumnCount();

		ArrayList<String> ColumnNames = new ArrayList<String>();
		
		for (int i = 1; i <= ColumnCount; i++) {
			ColumnNames.add(RSMD.getColumnName(i));
		}
		
		System.out.println();
		
		for (int i = 0; i < ColumnNames.size() * ancho; i++) System.out.print("_");
		
		System.out.println();
		
		for (int i = 0; i < ColumnNames.size(); i++) {
			System.out.format("%-" + ancho + "s", ColumnNames.get(i));
		}
		
		System.out.println();
		
		for (int i = 0; i < ColumnNames.size() * ancho; i++) System.out.print("-");
		
		System.out.println();
		
		while (resultSet.next()) {
			for (int i = 0; i < ColumnNames.size(); i++) {
				System.out.format("%-" + ancho + "s", resultSet.getString(i + 1));
			}
			System.out.println();
		}
		
		System.out.println();
		
		for (int i = 0; i < ColumnNames.size() * ancho; i++) System.out.print("-");
		
		System.out.println("\n");

	}
}
