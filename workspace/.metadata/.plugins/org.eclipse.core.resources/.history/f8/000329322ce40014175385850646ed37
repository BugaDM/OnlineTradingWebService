import java.util.List;
import org.apache.juddi.v3.client.config.UDDIClerk;
import org.apache.juddi.v3.client.config.UDDIClient;
import org.apache.juddi.v3.client.transport.Transport;
import org.uddi.v3_service.UDDIInquiryPortType;
import org.uddi.v3_service.UDDISecurityPortType;

public class EncontrarEndpoints {

	private static UDDISecurityPortType security = null;
	private static UDDIInquiryPortType inquiry = null;
	static UDDIClerk clerk = null;

	public EncontrarEndpoints() {
		try {
			// create a manager and read the config in the archive;
			// you can use your config file name
			UDDIClient clerkManager = new UDDIClient("resources/META-INF/simple-publish-uddi.xml");
			clerk = clerkManager.getClerk("default");
			// a ClerkManager can be a client to multiple UDDI nodes, so
			// supply the nodeName (defined in your uddi.xml.
			// The transport can be WS, inVM, RMI etc which is defined in the
			// uddi.xml
			Transport transport = clerkManager.getTransport();
			// Now you create a reference to the UDDI API
			security = transport.getUDDISecurityService();
			inquiry = transport.getUDDIInquiryService();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public String Fire(String authtoken, String key) {
		String endp0 = null;
		try {
			if (key == null) {
				// key = "uddi:juddi.apache.org:services-inquiry";
				// TODO cambiar key
				key = "uddi:globalweather-meteo1:service_globalweather";
			}

			List<String> endpoints = clerk.getEndpoints(key);
			System.out.println("Endpoints devueltos: " + endpoints.size());
			for (int i = 0; i < endpoints.size(); i++) {
				System.out.println("Endpoint " + i + ": " + endpoints.get(i));
				endp0 = endpoints.get(i);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return endp0;
	}

	public static void main(String args[]) {
		EncontrarEndpoints sp = new EncontrarEndpoints();
		String endp;
		endp = sp.Fire(null, null);
	}
}
